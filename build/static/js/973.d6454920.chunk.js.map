{"version":3,"file":"static/js/973.d6454920.chunk.js","mappings":"sXAcaA,EAAb,0IACC,WAAU,IAAD,EACR,EAAgCC,KAAKC,MAA7BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MACvB,OACC,UAAC,IAAD,CACCC,MAAO,IACPC,UAAU,QACVC,QAASH,EACTI,UAAU,EACVC,KAAMN,EALP,WAOC,iBAAKO,UAAU,mBAAf,WAEC,eAAIA,UAAU,YAAd,gBAA2BR,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMS,QACjC,iBAAMD,UAAU,aAAhB,gBAA8BR,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAMU,eAErC,SAAC,IAAD,CAASC,QAAM,KACf,iBAAKH,UAAU,GAAf,WACC,eAAIA,UAAU,iCAAd,SAA+C,qBAC/C,0BACC,SAACI,EAAA,EAAD,KACA,kBAAMJ,UAAU,iBAAhB,UAAiC,OAAjC,OAAsCR,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAMa,UAE7C,0BACC,SAACC,EAAA,EAAD,KACA,kBAAMN,UAAU,iBAAhB,UAAiC,WAAjC,OAA0CR,QAA1C,IAA0CA,OAA1C,EAA0CA,EAAMe,QAAQC,eAG1D,iBAAKR,UAAU,OAAf,WACC,eAAIA,UAAU,iCAAd,SAA+C,aAK/C,0BACC,SAACS,EAAA,EAAD,KACA,iBAAMT,UAAU,iBAAhB,SAAsC,OAAJR,QAAI,IAAJA,GAAAA,EAAMkB,MAAN,OAAalB,QAAb,IAAaA,OAAb,EAAaA,EAAMkB,MAAO,UAE7D,0BACC,SAACC,EAAA,EAAD,KACA,iBAAMX,UAAU,iBAAhB,gBAAkCR,QAAlC,IAAkCA,GAAlC,UAAkCA,EAAMoB,eAAxC,aAAkC,EAAeX,cAGnD,gBAAKD,UAAU,WAqBjB,KAhEF,GAA8Ba,EAAAA,WAmE9B,I,UCXA,EAzD4B,SAACtB,GAC5B,IAAMuB,GAAWC,EAAAA,EAAAA,MAEVd,EAYAV,EAZAU,KACAe,EAWAzB,EAXAyB,OACAC,EAUA1B,EAVA0B,SACAZ,EASAd,EATAc,GAEAa,GAOA3B,EARA4B,KAQA5B,EAPA2B,KAMAE,GACA7B,EANA8B,KAMA9B,EALA+B,KAKA/B,EAJAgC,MAIAhC,EAHAiC,IAGAjC,EAFAkC,KAEAlC,EADA6B,aAEJ,OACI,gBAAKpB,UAAU,0CAAf,UAEI,iBAAKA,UAAU,OAAf,WACI,2BACKoB,GACG,gBAEIM,QAAS,kBACLN,EAAY,CAAEnB,KAAAA,EAAMgB,SAAAA,EAAUC,IAAAA,EAAKb,GAAAA,GAD9B,EAGTL,UAAU,+BALd,SAOKC,KAGtB,gBACC0B,MAAO,CAACC,OAAQ,WACIF,QAAS,kBAAMZ,EAAS,GAAD,OAAIT,GAAlB,EACTL,UAAU,qBAH/B,SAKsBC,KAGT,0BAAOe,QAEX,gBAAKhB,UAAU,oCAAf,SACKiB,QAKpB,E,ymMCZYY,EAAb,gMAEIC,SAAW,WACPC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACE,GACH,EAAKC,SAAS,CAAEC,SAAUF,GAC7B,GAGR,EAVL,EAYIG,MAAQ,CACJD,SAAU,KACVE,MAAOC,EACPC,oBAAoB,EACpBC,aAAc,MAhBtB,EAuBIC,WAAa,SAACC,GACV,EAAKR,SAAS,CACVG,MAAO,EAAKD,MAAMC,MAAMM,QAAO,SAACC,GAAD,OAAUA,EAAKxC,KAAOsC,CAAtB,MAEnCG,EAAAA,GAAAA,QAAgB,CAAEC,QAAQ,gBAAD,OAAkBJ,GAAUK,SAAU,GAClE,EA5BL,EA8BIC,gBAAkB,SAACC,GACf,EAAKf,SAAS,CACVK,oBAAoB,EACpBC,aAAcS,GAErB,EAnCL,EAqCIC,iBAAmB,WACf,EAAKhB,SAAS,CACVK,oBAAoB,EACpBC,aAAc,MAErB,EA1CL,kDAmBI,WACInD,KAAKwC,UACR,GArBL,oBA8CI,WAAU,IAAD,OACL,EACIxC,KAAK+C,MADDD,EAAR,EAAQA,SAAiBI,GAAzB,EAAkBF,MAAlB,EAAyBE,oBAAoBC,EAA7C,EAA6CA,aAGvCW,EAAe,CACjB,CACIC,MAAO,qBACPC,UAAW,OACXC,OAAQ,SAACC,EAAGC,GAER,OACI,gBAAKzD,UAAU,SAAf,UACI,SAAC,EAAD,CAEIC,KAAMwD,EAAOxD,KACbgB,SAAUwC,EAAO/C,MACjBL,GAAIoD,EAAOpD,MAK1B,EACDqD,OAAQ,CACJC,QAAS,SAACC,EAAGC,GAGT,OAFAD,EAAIA,EAAE3D,KAAK6D,gBACXD,EAAIA,EAAE5D,KAAK6D,gBACK,EAAID,EAAID,EAAI,EAAI,CACnC,IAGT,CACIP,MAAO,6CACPC,UAAW,WACXI,OAAQ,CACJC,QAAS,SAACC,EAAGC,GAGT,OAFAD,EAAIA,EAAE1D,SAAS4D,gBACfD,EAAIA,EAAE3D,SAAS4D,gBACC,EAAID,EAAID,EAAI,EAAI,CACnC,IAGT,CACIP,MAAO,iCACPC,UAAW,UACXC,OAAQ,SAAChD,GAAD,OAAa,4BAAOA,EAAQC,KAAK,MAAjC,EACRkD,OAAQ,CACJC,QAAS,SAACC,EAAGC,GAGT,OAFAD,EAAIA,EAAErD,QAAQC,KAAKsD,gBACnBD,EAAIA,EAAEtD,QAAQC,KAAKsD,gBACH,EAAID,EAAID,EAAI,EAAI,CACnC,IAIT,CACIP,MAAO,GACPC,UAAW,UACXC,OAAQ,SAACC,EAAGO,GAER,OACI,iBAAK/D,UAAU,wCAAf,WACI,SAAC,IAAD,CAASqD,MAAM,OAAf,UACI,SAAC,KAAD,CACIlC,KAAK,UACLnB,UAAU,OACVqB,MAAM,SAAC2C,EAAA,EAAD,IACNtC,QAAS,WACL,EAAKuB,gBAAgBc,EACxB,EACDzC,KAAK,aAGb,SAAC,IAAD,CAAS+B,MAAM,SAAf,UACI,SAAC,KAAD,CACIY,QAAM,EACN5C,MAAM,SAAC6C,EAAA,EAAD,IACNxC,QAAS,WACLyC,QAAQC,IAAIL,EAAI1D,IAChB,EAAKqC,WAAWqB,EAAI1D,GACvB,EACDiB,KAAK,cAKxB,IAGT,OAAOc,GACH,UAAC,IAAD,CACIV,QAAS,WAAQ,EACjB2C,UAAW,CAAEC,QAAS,OAF1B,WAII,gBAAKtE,UAAU,mBAAf,UACI,SAAC,IAAD,CACIuE,QAASnB,EACToB,WAAYpC,EACZqC,OAAO,UAGf,SAAC,EAAD,CACIjF,KAAMiD,EACNhD,QAAS+C,EACT9C,MAAO,WACH,EAAKyD,kBACR,QAIT,SAAC,KAAD,CACI1D,SAAS,EACTiF,OAAO,KACP/E,MAAM,KACNgF,UAAU,iBACVC,aAAc,CAAEjF,MAAO,OAAQ+E,OAAQ,OACvCG,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAGhE,KArKL,GAA0BjE,EAAAA,WAwK1B,G","sources":["views/app-views/main/clients/list/UserView.js","components/shared-components/AvatarStatus/index.js","views/app-views/main/clients/list/List.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Avatar, Drawer, Divider } from 'antd';\r\nimport { \r\n\tMobileOutlined, \r\n\tMailOutlined, \r\n\tUserOutlined, \r\n\tCompassOutlined,\r\n\tCalendarOutlined,\r\n\tFacebookOutlined,\r\n\tInstagramOutlined,\r\n\tTwitterOutlined,\r\n\tGlobalOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport class UserView extends Component {\r\n\trender() {\r\n\t\tconst { data, visible, close} = this.props;\r\n\t\treturn (\r\n\t\t\t<Drawer\r\n\t\t\t\twidth={300}\r\n\t\t\t\tplacement=\"right\"\r\n\t\t\t\tonClose={close}\r\n\t\t\t\tclosable={false}\r\n\t\t\t\topen={visible}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t{/* <Avatar size={80} src={data?.img} /> */}\r\n\t\t\t\t\t<h3 className=\"mt-2 mb-0\">{data?.name}</h3>\r\n\t\t\t\t\t<span className=\"text-muted\">{data?.username}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Divider dashed />\r\n\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">Account details</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<UserOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">id: {data?.id}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<CalendarOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">Born in {data?.address.city}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t<h6 className=\"text-muted text-uppercase mb-3\">CONTACT</h6>\r\n\t\t\t\t\t{/* <p>\r\n\t\t\t\t\t\t<MobileOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.personalInfo.phoneNumber}</span>\r\n\t\t\t\t\t</p> */}\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<MailOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.email? data?.email: '-'}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<CompassOutlined />\r\n\t\t\t\t\t\t<span className=\"ml-3 text-dark\">{data?.company?.name}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t\t{/* <h6 className=\"text-muted text-uppercase mb-3\">Social profiles</h6>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<FacebookOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.facebook? data?.personalInfo.facebook : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<TwitterOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.twitter? data?.personalInfo.twitter : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<InstagramOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.instagram? data?.personalInfo.instagram : '-'}</a>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<GlobalOutlined />\r\n\t\t\t\t\t\t<a href=\"/#\" className=\"ml-3 text-dark\">{data?.personalInfo.site? data?.personalInfo.site : '-'}</a>\r\n\t\t\t\t\t</p> */}\r\n\t\t\t\t</div>\r\n\t\t\t</Drawer>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default UserView\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar } from \"antd\";\r\nimport {  useNavigate } from \"react-router-dom\";\r\n\r\nconst renderAvatar = (props) => {\r\n    return (\r\n        <Avatar {...props} className={`ant-avatar-${props.type}`}>\r\n            {props.text}\r\n        </Avatar>\r\n    );\r\n};\r\n\r\nexport const AvatarStatus = (props) => {\r\n\tconst navigate = useNavigate();\r\n    const {\r\n        name,\r\n        suffix,\r\n        subTitle,\r\n        id,\r\n        type,\r\n        src,\r\n        icon,\r\n        size,\r\n        shape,\r\n        gap,\r\n        text,\r\n        onNameClick,\r\n    } = props;\r\n    return (\r\n        <div className=\"avatar-status d-flex align-items-center\">\r\n            {/* {renderAvatar({ icon, src, type, size, shape, gap, text })} */}\r\n            <div className=\"ml-2\">\r\n                <div>\r\n                    {onNameClick ? (\r\n                        <div\r\n                            // style={{ cursor: \"pointer\" }}\r\n                            onClick={() =>\r\n                                onNameClick({ name, subTitle, src, id })\r\n                            }\r\n                            className=\"avatar-status-name clickable\"\r\n                        >\r\n                            {name}\r\n                        </div>\r\n                    ) : (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tstyle={{cursor: 'pointer'}}\r\n                            onClick={() => navigate(`${id}`)}\r\n                            className=\"avatar-status-name\"\r\n                        >\r\n                            {name}\r\n                        </div>\r\n                    )}\r\n                    <span>{suffix}</span>\r\n                </div>\r\n                <div className=\"text-muted avatar-status-subtitle\">\r\n                    {subTitle}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nAvatarStatus.propTypes = {\r\n    name: PropTypes.string,\r\n    src: PropTypes.string,\r\n    type: PropTypes.string,\r\n    onNameClick: PropTypes.func,\r\n};\r\n\r\nexport default AvatarStatus;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Tag, Tooltip, message, Button } from \"antd\";\r\nimport { EyeOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport dayjs from \"dayjs\";\r\nimport UserView from \"./UserView\";\r\nimport AvatarStatus from \"components/shared-components/AvatarStatus\";\r\nimport userData from \"assets/data/user-list.data.json\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\n\r\n\r\n// const myUsers = [\r\n//     {\r\n//         id: 1,\r\n//         name: \"Leanne Graham\",\r\n//         username: \"Bret\",\r\n//         email: \"Sincere@april.biz\",\r\n//         address: {\r\n//             street: \"Kulas Light\",\r\n//             suite: \"Apt. 556\",\r\n//             city: \"Gwenborough\",\r\n//             zipcode: \"92998-3874\",\r\n//             geo: { lat: \"-37.3159\", lng: \"81.1496\" },\r\n//         },\r\n//         company: {\r\n//             name: \"Romaguera-Crona\",\r\n//             catchPhrase: \"Multi-layered client-server neural-net\",\r\n//             bs: \"harness real\",\r\n//         },\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         name: \"ALeanne Graham\",\r\n//         username: \"ABret\",\r\n//         email: \"Sincere@april.biz\",\r\n//         address: {\r\n//             street: \"Kulas Light\",\r\n//             suite: \"Apt. 556\",\r\n//             city: \"AGwenborough\",\r\n//             zipcode: \"92998-3874\",\r\n//             geo: { lat: \"-37.3159\", lng: \"81.1496\" },\r\n//         },\r\n//         company: {\r\n//             name: \"Romaguera-Crona\",\r\n//             catchPhrase: \"Multi-layered client-server neural-net\",\r\n//             bs: \"harness real\",\r\n//         },\r\n//     },\r\n// ];\r\n\r\nexport class List extends Component {\r\n    // navigate = useNavigate();\r\n    getUsers = () => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                this.setState({ newUsers: json });\r\n            });\r\n\r\n        // this.setState({ newUsers: myUsers });\r\n    };\r\n\r\n    state = {\r\n        newUsers: null,\r\n        users: userData,\r\n        userProfileVisible: false,\r\n        selectedUser: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getUsers();\r\n    }\r\n\r\n    deleteUser = (userId) => {\r\n        this.setState({\r\n            users: this.state.users.filter((item) => item.id !== userId),\r\n        });\r\n        message.success({ content: `Deleted user ${userId}`, duration: 2 });\r\n    };\r\n\r\n    showUserProfile = (userInfo) => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo,\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null,\r\n        });\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { newUsers, users, userProfileVisible, selectedUser } =\r\n            this.state;\r\n\r\n        const tableColumns = [\r\n            {\r\n                title: \"Имя\",\r\n                dataIndex: \"name\",\r\n                render: (_, record) => {\r\n                    // console.log(record);\r\n                    return (\r\n                        <div className=\"d-flex\">\r\n                            <AvatarStatus\r\n                                // src={record.img}\r\n                                name={record.name}\r\n                                subTitle={record.email}\r\n                                id={record.id}\r\n                                // onNameClick={ }\r\n                            />\r\n                        </div>\r\n                    );\r\n                },\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.name.toLowerCase();\r\n                        b = b.name.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: \"Никнейм\",\r\n                dataIndex: \"username\",\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.username.toLowerCase();\r\n                        b = b.username.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: \"Город\",\r\n                dataIndex: \"address\",\r\n                render: (address) => <span>{address.city} </span>,\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.address.city.toLowerCase();\r\n                        b = b.address.city.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n\r\n            {\r\n                title: \"\",\r\n                dataIndex: \"actions\",\r\n                render: (_, elm) => {\r\n                    // console.log(\"elm\", elm);\r\n                    return (\r\n                        <div className=\"text-right d-flex justify-content-end\">\r\n                            <Tooltip title=\"View\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    className=\"mr-2\"\r\n                                    icon={<EyeOutlined />}\r\n                                    onClick={() => {\r\n                                        this.showUserProfile(elm);\r\n                                    }}\r\n                                    size=\"small\"\r\n                                />\r\n                            </Tooltip>\r\n                            <Tooltip title=\"Delete\">\r\n                                <Button\r\n                                    danger\r\n                                    icon={<DeleteOutlined />}\r\n                                    onClick={() => {\r\n                                        console.log(elm.id);\r\n                                        this.deleteUser(elm.id);\r\n                                    }}\r\n                                    size=\"small\"\r\n                                />\r\n                            </Tooltip>\r\n                        </div>\r\n                    );\r\n                },\r\n            },\r\n        ];\r\n        return newUsers ? (\r\n            <Card\r\n                onClick={() => {}}\r\n                bodyStyle={{ padding: \"0px\" }}\r\n            >\r\n                <div className=\"table-responsive\">\r\n                    <Table\r\n                        columns={tableColumns}\r\n                        dataSource={newUsers}\r\n                        rowKey=\"id\"\r\n                    />\r\n                </div>\r\n                <UserView\r\n                    data={selectedUser}\r\n                    visible={userProfileVisible}\r\n                    close={() => {\r\n                        this.closeUserProfile();\r\n                    }}\r\n                />\r\n            </Card>\r\n        ) : (\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"80\"\r\n                width=\"80\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{ width: \"100%\", height: \"50%\" }}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;\r\n"],"names":["UserView","this","props","data","visible","close","width","placement","onClose","closable","open","className","name","username","dashed","UserOutlined","id","CalendarOutlined","address","city","MailOutlined","email","CompassOutlined","company","Component","navigate","useNavigate","suffix","subTitle","src","type","onNameClick","icon","size","shape","gap","text","onClick","style","cursor","List","getUsers","fetch","then","response","json","setState","newUsers","state","users","userData","userProfileVisible","selectedUser","deleteUser","userId","filter","item","message","content","duration","showUserProfile","userInfo","closeUserProfile","tableColumns","title","dataIndex","render","_","record","sorter","compare","a","b","toLowerCase","elm","EyeOutlined","danger","DeleteOutlined","console","log","bodyStyle","padding","columns","dataSource","rowKey","height","ariaLabel","wrapperStyle","wrapperClass","colors"],"sourceRoot":""}