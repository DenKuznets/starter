{"version":3,"file":"static/js/919.6bb2026c.chunk.js","mappings":"mHAEMA,E,QAAOC,EAAAA,KAAW,YAAwE,IAAtEC,EAAqE,EAArEA,eAAgBC,EAAqD,EAArDA,WAAYC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OAE5EC,EAAY,CACjBC,QAAS,OACTP,eAAgBA,EAChBC,WAAYA,EACZE,IAAoB,kBAARA,EAAP,UAA6BA,EAA7B,MAAuCA,GAe7C,OAZID,IACHI,EAAUJ,cAAgBA,GAGvBE,IACHE,EAAUF,QAAUA,GAGjBC,IACHC,EAAUD,OAASA,IAGb,UAAIC,EACX,IAED,K,wMCFC,IANoBE,EAQfC,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAoBD,OApBCA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACFC,MAAQ,CACJC,KAAM,KACNC,SAAU,KACVC,MAAO,MAHH,EAMRC,QAAU,WACNC,MAAM,8CAAD,OAC6C,EAAKC,MAAMC,OAAOC,KAE/DC,MAAK,SAACC,GAAD,OAAcA,EAASC,MAAvB,IACLF,MAAK,SAACE,GAEH,EAAKC,SAAS,CACVX,KAAMU,EAAKV,KACXC,SAAUS,EAAKT,SACfC,MAAOQ,EAAKR,OAEnB,GACR,IAmHA,OAnHA,yCAED,WACIU,KAAKT,SACR,uBAED,WAAU,IAAD,OAmBL,EAAkCS,KAAKb,MAA/BC,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOD,EAArB,EAAqBA,SAOrB,OAAOD,GACH,+BACI,gBAAKa,UAAU,OAAf,UACI,SAAC,IAAD,CACIb,KAAK,mBACLc,OAAO,WACPC,cAAe,CACXf,KAAMA,EACNE,MAAOA,EACPD,SAAUA,GAEde,SApCC,SAACC,GACd,IAAMC,EAAM,YACZC,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,cAAeF,IAAAA,IAC1CG,YAAW,WACP,EAAKV,SAAS,CACVX,KAAMiB,EAAOjB,KACbE,MAAOe,EAAOf,MACdoB,SAAUL,EAAOK,WAErBH,EAAAA,GAAAA,QAAgB,CAAEC,QAAS,QAASF,IAAAA,EAAKK,SAAU,IACnD,EAAKlB,MAAMmB,UAAU,EACxB,GAAE,IACN,EAyBeC,eAvBO,SAACC,GACpBC,QAAQC,IAAI,UAAWF,EAC1B,EAYW,UAWI,SAAC,IAAD,WACI,UAAC,IAAD,CAAKG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAjC,WACI,UAAC,IAAD,CAAKC,OAAQC,EAAAA,GAAb,WACI,SAAC,IAAD,CAAKL,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,OACNnC,KAAK,OACLoC,MAAO,CACH,CACIC,UAAU,EACVlB,QACI,4BAPhB,UAWI,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKU,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,WACNnC,KAAK,WACLoC,MAAO,CACH,CACIC,UAAU,EACVlB,QACI,gCAPhB,UAWI,SAAC,IAAD,SAGR,SAAC,IAAD,CAAKU,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,UACI,SAAC,SAAD,CACII,MAAM,QACNnC,KAAK,QACLoC,MAAO,CACH,CACIC,UAAU,EACVC,KAAM,QACNnB,QACI,gCARhB,UAYI,SAAC,IAAD,YAIZ,SAAC,KAAD,CAAQmB,KAAK,UAAUC,SAAS,SAAhC,SAAyC,4BAS7D,SAAC,KAAD,CACIC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAEF,MAAO,OAAQD,OAAQ,OACvCI,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,YAGhE,OAvIChD,CAA0BD,EAAAA,WA0IhC,WAlJqBA,EAkJMC,EAjJhB,SAA0BO,GAC7B,IAAMC,GAASyC,EAAAA,EAAAA,MACTvB,GAAWwB,EAAAA,EAAAA,MACjB,OAAO,SAACnD,GAAD,kBAAeQ,GAAf,IAAsBmB,SAAUA,EAAUlB,OAAQA,IAC5D,E","sources":["components/shared-components/Flex/index.js","views/app-views/main/clients/list/EditProfile.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    Form,\r\n    Avatar,\r\n    Button,\r\n    Input,\r\n    DatePicker,\r\n    Row,\r\n    Col,\r\n    message,\r\n    Upload,\r\n} from \"antd\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { ROW_GUTTER } from \"constants/ThemeConstant\";\r\nimport Flex from \"components/shared-components/Flex\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { ColorRing } from \"react-loader-spinner\";\r\n\r\nfunction EditProfile(Component) {\r\n    return function WrappedComponent(props) {\r\n        const params = useParams();\r\n        const navigate = useNavigate();\r\n        return <Component {...props} navigate={navigate} params={params} />;\r\n    };\r\n}\r\n\r\nclass EditProfileSimple extends Component {\r\n    state = {\r\n        name: null,\r\n        username: null,\r\n        email: null,\r\n    };\r\n\r\n    getUser = () => {\r\n        fetch(\r\n            `https://jsonplaceholder.typicode.com/users/${this.props.params.id}`\r\n        )\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                // console.log(json);\r\n                this.setState({\r\n                    name: json.name,\r\n                    username: json.username,\r\n                    email: json.email,\r\n                });\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getUser();\r\n    }\r\n\r\n    render() {\r\n        const onFinish = (values) => {\r\n            const key = \"updatable\";\r\n            message.loading({ content: \"Updating...\", key });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    userName: values.userName,\r\n                });\r\n                message.success({ content: \"Done!\", key, duration: 1 });\r\n                this.props.navigate(-1);\r\n            }, 1000);\r\n        };\r\n\r\n        const onFinishFailed = (errorInfo) => {\r\n            console.log(\"Failed:\", errorInfo);\r\n        };\r\n\r\n        const { name, email, username } = this.state;\r\n        // const { name, email, username } = {\r\n        //     name: \"den\",\r\n        //     email: \"dadsa@mail.ru\",\r\n        //     username: \"adsdass\",\r\n        // };\r\n\r\n        return name ? (\r\n            <>\r\n                <div className=\"mt-4\">\r\n                    <Form\r\n                        name=\"basicInformation\"\r\n                        layout=\"vertical\"\r\n                        initialValues={{\r\n                            name: name,\r\n                            email: email,\r\n                            username: username,\r\n                        }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={16}>\r\n                                <Row gutter={ROW_GUTTER}>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message:\r\n                                                        \"Please input your name!\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message:\r\n                                                        \"Please input your username!\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    type: \"email\",\r\n                                                    message:\r\n                                                        \"Please enter a valid email!\",\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Save Change\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        ) : (\r\n            <ColorRing\r\n                visible={true}\r\n                height=\"80\"\r\n                width=\"80\"\r\n                ariaLabel=\"blocks-loading\"\r\n                wrapperStyle={{ width: \"100%\", height: \"50%\" }}\r\n                wrapperClass=\"blocks-wrapper\"\r\n                colors={[\"#e15b64\", \"#f47e60\", \"#f8b26a\", \"#abbd81\", \"#849b87\"]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditProfile(EditProfileSimple);\r\n"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","Component","EditProfileSimple","state","name","username","email","getUser","fetch","props","params","id","then","response","json","setState","this","className","layout","initialValues","onFinish","values","key","message","content","setTimeout","userName","duration","navigate","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","label","rules","required","type","htmlType","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","useParams","useNavigate"],"sourceRoot":""}